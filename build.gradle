plugins {
    id 'idea'
    id 'eclipse'
    id 'org.jetbrains.kotlin.jvm'
    id 'com.moowork.node'
    id 'com.cognifide.aem.bundle'
    id 'com.cognifide.aem.instance'
    id 'com.neva.fork'
}
description = 'Example'
defaultTasks = [':aemSatisfy', ':aemDeploy', ':aemAwait']

group = 'com.company.aem'
version = '1.0.0-SNAPSHOT'

repositories {
    jcenter()
    maven { url "https://repo.adobe.com/nexus/content/groups/public" }
    maven { url "https://repo1.maven.org/maven2" }
    maven { url  "https://dl.bintray.com/neva-dev/maven-public" }
}

aem {
    config {
        localAuthorInstance()
        localPublishInstance()
        awaitCondition = { it.bundleState.activeIgnoring("org.apache.sling.jcr.webdav") }
    }
}

aemCompose {
    includeProjects ':app:*'
    includeProjects ':content:*'
}

aemSatisfy {
    packages {
        group 'dep.vanity-urls', { /* local("pkg/vanityurls-components-1.0.2.zip") */ }
        group 'dep.kotlin', { dependency('org.jetbrains.kotlin:kotlin-osgi-bundle:1.2.21') }
        group 'tool.search-webconsole-plugin', { dependency('com.neva.felix:search-webconsole-plugin:1.2.0') }
        group 'tool.groovy-console', { url('https://github.com/OlsonDigital/aem-groovy-console/releases/download/11.0.0/aem-groovy-console-11.0.0.zip') }
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.wcm', name: 'io.wcm.testing.aem-mock', version: '2.2.8'

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-osgi-bundle', version: '1.2.21'
    compile group: 'org.osgi', name: 'osgi.cmpn', version: '6.0.0'
    compile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    compile group: 'javax.jcr', name: 'jcr', version: '2.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'org.apache.geronimo.specs', name: 'geronimo-atinject_1.0_spec', version: '1.0'
    compile group: 'org.apache.sling', name: 'org.apache.sling.api', version: '2.16.2'
    compile group: 'org.apache.sling', name: 'org.apache.sling.jcr.api', version: '2.4.0'
    compile group: 'org.apache.sling', name: 'org.apache.sling.models.api', version: '1.3.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3'
    compile group: 'com.adobe.aem', name: 'uber-jar', version: '6.3.0', classifier: 'obfuscated-apis'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.1'

    aemInstall group: 'org.jsoup', name: 'jsoup', version: '1.10.2'
    aemInstall group: 'com.github.mickleroy', name: 'aem-sass-compiler', version: '1.0.1'
    aemEmbed group: 'org.hashids', name: 'hashids', version: '1.0.1'
}

jar {
    def pkg = 'com.company.aem.example.core'

    manifest {
        attributes([
                'Bundle-Name': project.description,
                'Bundle-SymbolicName': pkg,
                'Bundle-Category': 'example',
                'Bundle-Vendor': 'Company',
                'Sling-Model-Packages': pkg,
                'Export-Package': "$pkg.*;-split-package:=merge-first"
        ])
    }
}

def compileOptions = {
    kotlinOptions.jvmTarget = "1.8"
}

compileKotlin compileOptions
compileTestKotlin compileOptions

node {
    version = '6.11.1'
    yarnVersion = '0.27.5'
    download = true
}

task webpackPublish(type: YarnTask) {
    dependsOn yarn
    yarnCommand = ['buildPublish']

    def dir = 'src/main/content/jcr_root/etc/designs/example/publish'
    inputs.dir("$dir/src")
    outputs.dir("$dir/dist")
}

aemCompose.dependsOn([webpackPublish])

fork {
    config {
        cloneFiles()
        moveFiles([
                "/com/company/aem/example": "/{{projectGroup|substitute('.', '/')}}/{{projectName}}",
                "/example": "/{{projectName}}"
        ])
        replaceContents([
                "com.company.aem.example": "{{projectGroup}}.{{projectName}}",
                'com.company.aem': "{{projectGroup}}",
                "Example": "{{projectLabel}}",
                "example": "{{projectName}}",
        ])
    }
    inPlaceConfig 'setup', {
        copyTemplateFile("gradle.properties")
    }
}
