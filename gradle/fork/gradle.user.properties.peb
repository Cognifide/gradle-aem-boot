# === GAP configuration ===

notifier.enabled={{notifierEnabled}}

fileTransfer.user={{companyUser}}
fileTransfer.password={{companyPassword}}
fileTransfer.domain={{companyDomain}}

package.validator.enabled={{packageValidatorEnabled}}
package.bundleTest={{packageBundleTest}}
package.nestedValidation={{packageNestedValidation}}
{% if packageDamAssetToggle == 'true' %}
package.manager.workflowToggle=[dam_asset=false]
{% endif %}

instance.provision.enabled={{instanceProvisionerEnabled}}
instance.provision.deployPackage.strict={{instanceProvisionDeployPackageStrict}}
instance.awaitUp.help.enabled={{ instanceAwaitUpHelpEnabled }}

instance.local-author.enabled={{instanceAuthorEnabled}}
instance.local-author.httpUrl={{instanceAuthorHttpUrl}}
instance.local-author.type={{instanceType}}
instance.local-author.runModes={{localInstanceRunModes}}
instance.local-author.jvmOpts={{localInstanceJvmOpts}}
instance.local-author.openPath={{localInstanceOpenPath}}

instance.local-publish.enabled={{instancePublishEnabled}}
instance.local-publish.httpUrl={{instancePublishHttpUrl}}
instance.local-publish.type={{instanceType}}
instance.local-publish.runModes={{localInstanceRunModes}}
instance.local-publish.jvmOpt={{localInstanceJvmOpts}}
instance.local-publish.openPath={{localInstanceOpenPath}}

{% if instanceType == 'local' %}
localInstance.source={{ localInstanceSource }}
localInstance.quickstart.jarUrl={{ localInstanceQuickstartJarUri }}
localInstance.quickstart.licenseUrl={{ localInstanceQuickstartLicenseUri }}
localInstance.backup.uploadUrl={{ localInstanceBackupUploadUri}}
localInstance.backup.downloadUrl={{ localInstanceBackupDownloadUri }}
localInstance.openMode={{ localInstanceOpenMode }}
{% endif %}
